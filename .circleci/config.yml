version: 2.1
executors:
  node10:
    docker:
      - image: circleci/node:10
        environment:
          NPM_CONFIG_PREFIX: "~/.npm-global"
    working_directory: ~/repo

orbs:
  helix-post-deploy: adobe/helix-post-deploy@1.0.2

commands:
  setup:
    steps:
      - checkout
      - restore_cache:
          keys:
            - v3-dependencies-{{ arch }}-{{ checksum "package-lock.json" }}
      - run:
          name: install npm 6.9.0
          command: sudo npm -g install npm@6.9.0
      - run:
          name: Installing Dependencies
          command: npm ci
      - save_cache:
          paths:
            - node_modules
          key: v3-dependencies-{{ arch }}-{{ checksum "package-lock.json" }}
      - run:
          name: prepare test git user
          command: git config --global user.email "circleci@example.com" && git config --global user.name "CircleCi Build"

jobs:
  build:
    executor: node10
    steps:
      - setup
      - run: mkdir junit
      - run:
          name: Lint
          command: npm run lint
      - run:
          name: Getting Code Coverage
          command: npm run test-ci
      - store_test_results:
          path: junit
      - store_artifacts:
          path: junit

  semantic-release:
    executor: node10
    steps:
      - setup
      - run:
          name: revert changes to package-lock.json
          command: git checkout -- package-lock.json
      - helix-post-deploy/config-wsk
      - helix-post-deploy/config-env
      - run:
          name: Semantic Release
          command: npm run semantic-release
      - run:
          name: Post-Deployment Integration Test
          command: npm run test-postdeploy
      - store_test_results:
          path: junit
      - run:
          name: Link Sequences
          command: npm run deploy-sequences
      - helix-post-deploy/monitoring

  branch-deploy:
    executor: node10
    steps:
      - setup
      - run:
          name: revert changes to package-lock.json
          command: git checkout -- package-lock.json
      - helix-post-deploy/config-wsk
      - run:
          name: Branch Deployment
          command: npm run deploy-ci
      - run:
          name: Post-Deployment Integration Test
          command: npm run test-postdeploy
      - store_test_results:
          path: junit

workflows:
  version: 2
  build:
    jobs:
      - build
      - branch-deploy:
          requires:
            - build
          filters:
            branches:
              ignore: master
      - semantic-release:
          requires:
            - build
          filters:
            branches:
              only: master
